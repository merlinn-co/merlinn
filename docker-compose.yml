services:
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data
      - ${CONFIG_DIR}/postgres/postgres_init.sh:/docker-entrypoint-initdb.d/init.sh
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_MULTIPLE_DATABASES
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - ${DATA_DIR}/mongo:/data/db
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
  chroma:
    image: chromadb/chroma
    container_name: chroma
    ports:
      - "${CHROMA_PORT}:${CHROMA_PORT}"
    volumes:
      - ${DATA_DIR}/chromadb:/chroma/chroma
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS
      - CHROMA_SERVER_AUTHN_PROVIDER
      - CHROMA_AUTH_TOKEN_TRANSPORT_HEADER
  ory-kratos-migrate:
    image: oryd/kratos:v1.2.0
    container_name: ory-kratos-migrate
    environment:
      - DSN=${KRATOS_DATABASE_URL}
    volumes:
      - type: bind
        source: ${CONFIG_DIR}/kratos/email-password
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    depends_on:
      - postgres
  ory-proxy:
    image: oryd/ory
    container_name: ory-proxy
    entrypoint: ory proxy http://host.docker.internal:${DASHBOARD_PORT}  --dev
  ory-kratos:
    image: oryd/kratos:v1.2.0
    container_name: ory-kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    ports:
      - "${KRATOS_PUBLIC_PORT}:${KRATOS_PUBLIC_PORT}"
      - "${KRATOS_ADMIN_PORT}:${KRATOS_ADMIN_PORT}"
    environment:
      - DSN=${KRATOS_DATABASE_URL}
      - LOG_LEVEL=trace
    volumes:
      - type: bind
        source: ${CONFIG_DIR}/kratos/email-password
        target: /etc/config/kratos
    depends_on:
      - ory-kratos-migrate
  ory-kratos-ui:
    image: oryd/kratos-selfservice-ui-node:v1.2.0
    container_name: ory-kratos-ui
    ports:
      - "${KRATOS_UI_PORT}:${KRATOS_UI_PORT}"
    environment:
      - PORT=${KRATOS_UI_PORT}
      - KRATOS_PUBLIC_URL=${KRATOS_UI_PUBLIC_URL}
      - KRATOS_BROWSER_URL=${KRATOS_UI_BROWSER_URL}
      - COOKIE_SECRET=${KRATOS_UI_COOKIE_SECRET}
      - CSRF_COOKIE_NAME=${KRATOS_UI_CSRF_COOKIE_NAME}
      - CSRF_COOKIE_SECRET=${KRATOS_UI_CSRF_COOKIE_SECRET}
    restart: on-failure
  # vault:
  #   image: vault:1.13.3
  #   container_name: vault
  #   environment:
  #     - VAULT_ADDR=http://0.0.0.0:8200
  #     - VAULT_API_ADDR=http://0.0.0.0:8200
  #   cap_add:
  #     - IPC_LOCK
  #   volumes:
  #     - ${DATA_DIR}/vault/file:/vault/file
  #     - ${DATA_DIR}/vault/logs:/vault/logs
  #     - ${DATA_DIR}/vault/data:/vault/data
  #     - ${CONFIG_DIR}vault/config.hcl:/vault/config/vault.hcl
  #   ports:
  #     - "8200:8200"
  #     - "8201:8201"
  #     - "8202:8202"
  #   entrypoint: vault server -config=/vault/config/vault.hcl -dev -dev-root-token-id=0ae9b045-a5a2-4c62-a698-88e1a7b9b7ce
  api:
    container_name: api
    build:
      context: "."
      dockerfile: services/api/Dockerfile
    env_file:
      - services/api/.env
    environment:
      - MONGO_URI
      - DATA_PROCESSOR_URL
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - mongo
      # - vault
    extra_hosts:
      - "host.docker.internal:host-gateway"
  slackbot:
    container_name: slackbot
    build:
      context: "."
      dockerfile: services/slackbot/Dockerfile
    env_file:
      - services/slackbot/.env
    environment:
      - MONGO_URI
      - API_URL
    ports:
      - "${SLACKBOT_PORT}:${SLACKBOT_PORT}"
    depends_on:
      - mongo
      
  data-processor:
    container_name: data-processor
    build: 
      context: services/data-processor
    env_file:
      - services/data-processor/.env
    environment:
      - MONGO_URI
    ports:
      - "${DATA_PROCESSOR_PORT}:${DATA_PROCESSOR_PORT}"
    depends_on:
      - mongo
  dashboard:
    container_name: dashboard
    build: 
      context: "."
      dockerfile: services/dashboard/Dockerfile
    ports:
      - "${DASHBOARD_PORT}:80"